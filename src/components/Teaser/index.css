/**
 * 1. Make sure stories will all have the same height when displayed in columns.
 * 2. Used to be able to spread the story body all the remaining height.
 */
.Teaser {
  position: relative;
  border: 1px solid var(--dark-beige);
  margin-bottom: 2em;
  flex-grow: 1; /* 1 */
  display: flex; /* 2 */
  flex-direction: column; /* 2 */
}

/**
 * 1. Small pseudo-elements overlayed on top of the story header to give the box
 *    these cutted-out corners like in the game.
 * 2. Dimensions of these cutted-out corners aligned with the `left` and `right`
 *    values of the `.Teaser__body` pseudo-element used at the bottom,
 *    while taking into account the fact that they are placed at -1 offsets..
 * 3. Offset matching the thickness of the border, so it can be placed on top.
 */
.Teaser::before,
.Teaser::after {
  content: ''; /* 1 */
  width: calc(0.5em + 1px); /* 2 */
  height: calc(0.5em + 1px); /* 2 */
  top: -1px; /* 3 */
  position: absolute;
  border-bottom: inherit;
  z-index: 2;
  background-color: var(--black);
}

.Teaser::before {
  left: -1px;
  border-right: inherit;
}

.Teaser::after {
  right: -1px;
  border-left: inherit;
}

/**
 * 1. Position context for the pseudo-element used as a fixed ratio placeholder.
 * 2. Make sure the `.Card` can safely overflow.
 */
.Teaser__header {
  position: relative; /* 1 */
  overflow: hidden; /* 2 */
  border-bottom: inherit;
}

/**
 * 1. Pseudo-element used to apply a striped background to the header while
 *    being able to tweak its opacity.
 * 2. Make sure it covers the entire height of the header.
 * 3. Fix position quirks and make diagonal stripes.
 */
.Teaser__header::after {
  content: ''; /* 1 */
  z-index: -1;
  position: absolute;
  padding-top: 100%; /* 2 */
  width: 100%; /* 2 */
  transform: translate(-20%, -50%) rotate(45deg); /* 3 */
  left: 0;
  top: 50%;
  opacity: 0.5;
  transition: opacity 800ms;
  mask-image: linear-gradient(35deg, var(--black), transparent);
  background-image: repeating-linear-gradient(
    80deg,
    var(--color),
    var(--color) 4px,
    transparent 4px,
    transparent 8px
  );
}

/**
 * When hovering the entire teaser, lighten up the background.
 */
.Teaser:hover .Teaser__header::after {
  opacity: 1; /* 1 */
}

/**
 * 1. Pseudo-element used to apply a fixed ratio to the header, since all its
 *    content is absolutely positioned.
 * 2. Arbitrary ratio which comes relatively close to giving the teasers a
 *    golden ratio.
 */
.Teaser__header::before {
  content: ''; /* 1 */
  display: block;
  padding-bottom: calc(100% / 3 * 2); /* 2 */
}

.Teaser__header .Card {
  position: absolute;
  width: 60%;
  top: 0;
  right: 0;
  transform: rotate(-12deg);
  transition-duration: 2000ms;
}

/**
 * 1. When hovering the entire teaser, slowly rotate the card to highlight it.
 */
.Teaser:hover .Card {
  transform: rotate(-7deg); /* 1 */
}

/**
 * 1. Make sure the body takes the entire remaining height of the teaser.
 */
.Teaser__body {
  position: relative;
  padding: 0.75em;
  background-color: var(--black);
  flex-grow: 1; /* 1 */
}

/**
 * 1. Horizontal pseudo-element at the bottom of the box to give it these
 *    cutted-out corners like in the game.
 */
.Teaser__body::after {
  content: ''; /* 1 */
  position: absolute;
  left: 0.5em;
  height: 0.5em;
  right: 0.5em;
  border: 1px solid var(--dark-beige);
  background-color: inherit;
}

.Teaser__body::after {
  top: 100%;
  border-top: 0;
}

.Teaser__meta {
  font-size: 80%;
  color: var(--beige);
  text-transform: uppercase;
  margin-bottom: 0;
}

.Teaser__author {
  text-decoration: none;
}

.Teaser__author:hover {
  color: var(--white);
}

.Teaser__title {
  margin-top: 0;
  margin-bottom: 0.5em;
}

.Teaser__link {
  text-decoration: none;
}

.Teaser__link:hover {
  border-bottom: 1px solid;
}

.Teaser__excerpt {
  margin-bottom: 0;
}
